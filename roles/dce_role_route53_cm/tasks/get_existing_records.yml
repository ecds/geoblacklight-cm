---
- name:  Check if A record already exists
  route53:
    state: get
    zone: "{{ route53_top_level_domain }}"
    record: "{{ route53_A_record }}"
    type: A
  register: oldA

- name: Check if CNAMES already exist
  route53:
    state: get
    zone: "{{ route53_top_level_domain }}"
    record: "{{ item }}"
    type: CNAME
  loop: "{{ route53_CNAMEs }}"
  when: ec2_CNAME is defined
  register: oldCNAME

- debug:
    var: oldA

- debug:
    var: oldCNAME

- debug:
    var: ec2_fqdn

- debug:
    msg: "A record does NOT need to be changed"
  when: oldA.set.value == ec2_ip 

- debug:
    var: oldCNAME

- set_fact:
    all_CNAMES_match_ec2_fqdn: true # Initalized for logic
    CNAME_query_values: "{{ oldCNAME.results | map(attribute='set.value') | map('default', 'placeholder') | list }}"

- set_fact:
    all_CNAMES_match_ec2_fqdn: false
  when: item != ec2_fqdn
  loop: "{{ CNAME_query_values }}"

- debug:
    var: CNAME_query_values

- debug: 
    var: all_CNAMES_match_ec2_fqdn

#- meta: end_play 

- name:
  block:
    - set_fact:
        old_cnames_found: yes
      when: not oldCNAME.skipped
  when: oldCNAME.results is defined
